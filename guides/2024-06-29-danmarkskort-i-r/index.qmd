---
title: Nemt Danmarkskort i R
citation:
  url: https://aleksanderbl.dk/guides/2024-05-19-danmarkskort-i-r
bibliography: refs.bib
execute: 
  echo: true
  output: false
  cache: true
  eval: false
link-external-icon: true
link-external-newwindow: true
other-links:
  - text: Samlet script
    icon: code
    href: https://github.com/aleksanderbl29/aleksanderbldk/blob/main/guides/2024-06-29-danmarkskort-i-r/kort.r
draft: false
date: 2024-06-29
---

## Baggrund

Da jeg skulle lære at lave kort i R, lavede jeg et par hurtige googlesøgninger, hvor jeg kom frem til en god guide lavet af Mikkel Freltoft @krogsholm2021. Jeg opdagede dog hurtigt, at guiden er out-of-date - og derfor skriver jeg denne guide.

## Pakker

I R-universet findes der flere pakker til at arbejde med kort. Jeg har valgt at bruge `sf`som den pakke jeg sætter mig ind i, hvad kan. De fleste kan grundlæggende det samme og er bygget op omkring `geometry`, der er den kolonne (eller variabel) i en dataframe, der indeholder figurerne til kortet.

Først indlæser vi alle pakker der skal bruges.

```{r indlæs-pakker}
library(tidyverse)      # Her får vi %>%, ggplot2 og andre smarte funktioner.
library(sf)             # Skal bruges til at arbejde med "simple features" (figurer).
```

## Data

For at tegne et præcist danmarkskort kan vi hente `geojson` data fra [Styrelsen for Dataforsyning og Infrastruktur](https://sdfi.dk/). De udstiller en udmærket `API` der kan levere kortdata til os. For at vi kan benytte en `API` i `R` skal vi først definere et `URL` og dernæst bede om at downloade den fil der hører til på den hjemmeside.

::: {.aside}
Du behøver *ikke* at vide hvad en `API` er for at kunne gennemføre denne guide.
:::

1. Først definerer vi `API`ens `URL`.

```{r definer-url}
## Gemmer URL til API-kald
url <- "https://api.dataforsyningen.dk/afstemningsomraader?format=geojson"
```

2. Dernæst beder vi `R` om at downloade den efterspurgte fil til en midlertidig placering i computerens hukommelse.

```{r}
# Skaber midlertidig fil
geofile <- tempfile()

# Henter geojson til tempfile
download.file(url, geofile)
```

Vi bruger funktionen `download.file()` og giver den `API`ens `URL` og den midlertidige dataplacering, hvor vi ønsker dataene hentet til.

3. Til sidst omformer vi `geoJSON` til et `sf` format som `R` kan forstå.

```{r}
# Læser datafilen ind i R
geodata_st <- st_read(geofile)
afstemningssteder_geodata <- st_as_sf(geodata_st)
```

::: {.aside}
Her omformes først til `st` og dernæst til `sf`.
:::

Nu har vi en dataframe i `afstemningssteder_geodata` der indeholder de figurer vi skal bruge for at lave et danmarkskort!

```{r}

vind_afstemningssteder_geodata <- rmapshaper::ms_simplify(vind_afstemningssteder_geodata, keep = 0.01, keep_shapes = TRUE)

aarhus_afstemningssteder <- vind_afstemningssteder_geodata %>%
  filter(kommunenavn == "Aarhus") %>%
  ggplot(aes(fill = navn)) +
  geom_sf() +
  ggthemes::theme_map() +
  theme(legend.position = "none")

bw_afstemningssteder <- ggplot(vind_afstemningssteder_geodata) +
  geom_sf() +
  ggthemes::theme_map() +
  labs(title = "Afstemningssteder i Danmark", caption = "Kilde: DAWA/DAGI") +
  theme(legend.position = "none", title = element_text(size = 20))
```

::: {.aside}
Her indlæser vi `rmapshaper::ms_simplify()` med pakkens navn for at slippe for at indlæse hele pakken - Vi skal nemlig ikke bruge det hele! Det samme har vi gjort med `ggthemes::theme_map()`, fordi der kun skal bruges det ene *theme*
:::

```{r}
aarhus_afstemningssteder
bw_afstemningssteder
```

## Samlet kode

Alt hvad jeg har gennemgået i denne guide kan findes i et samlet `r`-script [på min github](https://github.com/aleksanderbl29/aleksanderbldk/blob/main/guides/2024-06-29-danmarkskort-i-r/kort.r).

## Gammelt kode

```{r api-kode-1}

log_info("Starter download af geoJSON")
starttid <- Sys.time()

sluttid <- Sys.time()
log_info("GeoJSON downloadet")

download_tid <- sluttid - starttid
log_info(paste("Det tog", round(download_tid, 3), "minutter at downloade"))

# sf_use_s2(FALSE)
```
